name: Deploy to GitHub Pages and VPS

on:
  push:
    branches: 'master'

jobs:
  build-client:
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Configuration ‚öôÔ∏è
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Install Node.js ‚öôÔ∏è
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: pnpm

      - name: Install dependencies üîß
        run: pnpm i --frozen-lockfile

      - name: Build üèóÔ∏è
        env:
          PUBLIC_ADAPTER: static
          PUBLIC_API_URL: ${{ vars.API_URL }}
          PUBLIC_GTAG_ID: ${{ vars.GTAG_ID }}
          PUBLIC_BASE_URL: ${{ vars.BASE_URL }}
          PUBLIC_CAPTCHA: ${{ vars.PUBLIC_CAPTCHA }}
          PRIVATE_GROUP_ID:
          PRIVATE_THREAD_ID:
          PRIVATE_BOT_KEY:
          PRIVATE_CAPTCHA:
        run: |
          pnpm build

      - name: Upload Artifacts üöÄ
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'

  build-server:
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    env:
      IMAGE: ${{ secrets.REGISTRY_URL }}/${{ vars.SERVICE }}

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Set up Docker Buildx ‚öì
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to the Registry üîë
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and Push Container üèóÔ∏è
        id: build
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.IMAGE }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE }}:buildcache,mode=max
          build-args: |
            PRIVATE_GROUP_ID=${{ secrets.PRIVATE_GROUP_ID }}
            PRIVATE_THREAD_ID=${{ secrets.PRIVATE_THREAD_ID }}
            PRIVATE_BOT_KEY=${{ secrets.PRIVATE_BOT_KEY }}
            PRIVATE_CAPTCHA=${{ secrets.PRIVATE_CAPTCHA }}
            PUBLIC_API_URL=${{ vars.API_URL }}
            PUBLIC_GTAG_ID=${{ vars.GTAG_ID }}
            PUBLIC_BASE_URL=${{ vars.BASE_URL }}
            PUBLIC_CAPTCHA=${{ vars.PUBLIC_CAPTCHA }}

  deploy:
    needs:
      - build-client
      - build-server

    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy Client üöÄ
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deploy Server üöÄ
        run: |-
          sed -i "s|\${REGISTRY_URL}|${{ secrets.REGISTRY_URL }}|g" compose.yml
          sed -i "s|${{ vars.SERVICE }}:latest|${{ vars.SERVICE }}@${{ steps.build.outputs.digest }}|g" compose.yml

          curl ${{ secrets.CD_URL }}/${{ vars.SERVICE }} -H 'authorization: ${{ secrets.CD_AUTHORIZATION }}' -F compose=@compose.yml
